{"ast":null,"code":"import { MongoClient } from \"mongodb\";\n\nasync function handler(req, res) {\n  if (req.method === \"POST\") {\n    try {\n      const data = req.body;\n      const password = encodeURIComponent(\"#Maddy@123\"); // Construct the MongoDB connection string\n\n      const connectionString = `mongodb+srv://hasan:${password}@livemeetup.vsjlgyd.mongodb.net/?retryWrites=true&w=majority`; // Initialize MongoDB client\n\n      const client = new MongoClient(connectionString, {\n        useNewUrlParser: true,\n        useUnifiedTopology: true\n      });\n\n      try {\n        // Connect to MongoDB\n        await client.connect(); // Access the database and collection\n\n        const db = client.db();\n        const meetupsCollection = db.collection(\"livemeetup\"); // Insert data into the collection\n\n        const result = await meetupsCollection.insertOne(data);\n        console.log(result); // Send a successful response to the client\n\n        res.status(201).json({\n          message: \"Meetup inserted\"\n        });\n      } finally {\n        // Close the MongoDB connection\n        await client.close();\n      }\n    } catch (error) {\n      console.error(\"Error:\", error); // Send an error response to the client with the detailed error message\n\n      res.status(500).json({\n        message: \"Internal Server Error\",\n        error: error.message\n      });\n    }\n  }\n}\n\nexport default handler; // import { MongoClient } from \"mongodb\";\n// async function handler(req, res){\n//     if(req.method==='POST'){\n//         const data = req.body;\n//         MongoClient.connect('mongodb+srv://hasan:#Maddy@123@livemeetup.vsjlgyd.mongodb.net/?retryWrites=true&w=majority');\n//         const db = client.db();\n//         const meetupsCollection= db.collection('livemeetup');\n//         const result = await meetupsCollection.insertOne(data);\n//         console.log(result);\n//         client.close();\n//         res.status(201).json({message:\"Meetup inserted\"});\n//     }\n// }\n// export default handler;","map":{"version":3,"sources":["C:/Users/hadee/Desktop/sharpnerProjects/MeetUP/pages/api/new-meetup.js"],"names":["MongoClient","handler","req","res","method","data","body","password","encodeURIComponent","connectionString","client","useNewUrlParser","useUnifiedTopology","connect","db","meetupsCollection","collection","result","insertOne","console","log","status","json","message","close","error"],"mappings":"AAAA,SAASA,WAAT,QAA4B,SAA5B;;AAEA,eAAeC,OAAf,CAAuBC,GAAvB,EAA4BC,GAA5B,EAAiC;AAC/B,MAAID,GAAG,CAACE,MAAJ,KAAe,MAAnB,EAA2B;AACzB,QAAI;AACF,YAAMC,IAAI,GAAGH,GAAG,CAACI,IAAjB;AACA,YAAMC,QAAQ,GAAGC,kBAAkB,CAAC,YAAD,CAAnC,CAFE,CAIF;;AACA,YAAMC,gBAAgB,GAAI,uBAAsBF,QAAS,8DAAzD,CALE,CAOF;;AACA,YAAMG,MAAM,GAAG,IAAIV,WAAJ,CAAgBS,gBAAhB,EAAkC;AAC/CE,QAAAA,eAAe,EAAE,IAD8B;AAE/CC,QAAAA,kBAAkB,EAAE;AAF2B,OAAlC,CAAf;;AAKA,UAAI;AACF;AACA,cAAMF,MAAM,CAACG,OAAP,EAAN,CAFE,CAIF;;AACA,cAAMC,EAAE,GAAGJ,MAAM,CAACI,EAAP,EAAX;AACA,cAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,YAAd,CAA1B,CANE,CAQF;;AACA,cAAMC,MAAM,GAAG,MAAMF,iBAAiB,CAACG,SAAlB,CAA4Bb,IAA5B,CAArB;AACAc,QAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ,EAVE,CAYF;;AACAd,QAAAA,GAAG,CAACkB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,UAAAA,OAAO,EAAE;AAAX,SAArB;AACD,OAdD,SAcU;AACR;AACA,cAAMb,MAAM,CAACc,KAAP,EAAN;AACD;AACF,KA/BD,CA+BE,OAAOC,KAAP,EAAc;AACdN,MAAAA,OAAO,CAACM,KAAR,CAAc,QAAd,EAAwBA,KAAxB,EADc,CAGd;;AACAtB,MAAAA,GAAG,CAACkB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,QAAAA,OAAO,EAAE,uBAAX;AAAoCE,QAAAA,KAAK,EAAEA,KAAK,CAACF;AAAjD,OAArB;AACD;AACF;AACF;;AAED,eAAetB,OAAf,C,CAOA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import { MongoClient } from \"mongodb\";\r\n\r\nasync function handler(req, res) {\r\n  if (req.method === \"POST\") {\r\n    try {\r\n      const data = req.body;\r\n      const password = encodeURIComponent(\"#Maddy@123\");\r\n\r\n      // Construct the MongoDB connection string\r\n      const connectionString = `mongodb+srv://hasan:${password}@livemeetup.vsjlgyd.mongodb.net/?retryWrites=true&w=majority`;\r\n\r\n      // Initialize MongoDB client\r\n      const client = new MongoClient(connectionString, {\r\n        useNewUrlParser: true,\r\n        useUnifiedTopology: true,\r\n      });\r\n\r\n      try {\r\n        // Connect to MongoDB\r\n        await client.connect();\r\n\r\n        // Access the database and collection\r\n        const db = client.db();\r\n        const meetupsCollection = db.collection(\"livemeetup\");\r\n\r\n        // Insert data into the collection\r\n        const result = await meetupsCollection.insertOne(data);\r\n        console.log(result);\r\n\r\n        // Send a successful response to the client\r\n        res.status(201).json({ message: \"Meetup inserted\" });\r\n      } finally {\r\n        // Close the MongoDB connection\r\n        await client.close();\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error:\", error);\r\n\r\n      // Send an error response to the client with the detailed error message\r\n      res.status(500).json({ message: \"Internal Server Error\", error: error.message });\r\n    }\r\n  }\r\n}\r\n\r\nexport default handler;\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import { MongoClient } from \"mongodb\";\r\n// async function handler(req, res){\r\n//     if(req.method==='POST'){\r\n//         const data = req.body;\r\n\r\n//         MongoClient.connect('mongodb+srv://hasan:#Maddy@123@livemeetup.vsjlgyd.mongodb.net/?retryWrites=true&w=majority');\r\n//         const db = client.db();\r\n//         const meetupsCollection= db.collection('livemeetup');\r\n//         const result = await meetupsCollection.insertOne(data);\r\n//         console.log(result);\r\n//         client.close();\r\n//         res.status(201).json({message:\"Meetup inserted\"});\r\n//     }\r\n// }\r\n\r\n// export default handler;"]},"metadata":{},"sourceType":"module"}